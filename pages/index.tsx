import type { NextPage } from 'next';
import Image from 'next/image';
import Head from 'next/head';
import { useAccount, useConnect, useEnsName } from 'wagmi';
import { InjectedConnector } from 'wagmi/connectors/injected';

const Home: NextPage = () => {
    const { data: account } = useAccount();
    // const { data: ensName } = useEnsName({ address: account.address });
    const {
        activeConnector,
        connect,
        connectors,
        error,
        isConnecting,
        pendingConnector,
    } = useConnect();

    return (
        <div>
            <Head>
                <title>Beautiful faces</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className="bg-gradient-to-tr from-pink-500 via-red-500 to-yellow-500 w-full py-4 flex flex-row justify-between px-4">
                <div className="text-white font-semibold text-2xl ">
                    Beautiful faces
                </div>

                {account && (
                    <div className="rounded-md border-white border-2 text-gray-700 truncate p-2">
                        {account.address}
                    </div>
                )}
            </div>

            <div>TEXT TEXT TEXT</div>
            <div className="w-3/5 mx-auto flex flex-col justify-center">
                <div className="text-center text-2xl font-semibold mb-4">
                    Connect your wallet:
                </div>
                <div className="flex flex-col mx-auto">
                    {connectors.map((x) => (
                        <div key={x.id}>
                            <button
                                disabled={!x.ready}
                                onClick={() => connect(x)}
                                className="flex flex-row"
                            >
                                <div className="mr-3">
                                    <Image
                                        src={`/images/${x.id}.svg`}
                                        alt={x.name}
                                        height={32}
                                        width={32}
                                    />
                                </div>
                                <div>
                                    <div className="text-xl font-medium">
                                        {x.name}
                                    </div>
                                    <div>
                                        {isConnecting &&
                                            pendingConnector?.id === x.id &&
                                            ' (connecting)'}
                                    </div>
                                </div>
                            </button>
                        </div>
                    ))}
                </div>
                <div>{error && <div>{error.message}</div>}</div>
            </div>

            <div>
                {activeConnector && (
                    <div>Connected to {activeConnector.name}</div>
                )}
            </div>
        </div>
    );

    // return (
    //     <div>
    //         <Head>
    //             <title>Create Next App</title>
    //             <meta
    //                 name="description"
    //                 content="Generated by create next app"
    //             />
    //             <link rel="icon" href="/favicon.ico" />
    //         </Head>

    //         <main>
    //             <div>Hello World</div>
    //         </main>

    //         <footer>
    //             <a
    //                 href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
    //                 target="_blank"
    //                 rel="noopener noreferrer"
    //             >
    //                 Powered by{' '}
    //             </a>
    //         </footer>
    //     </div>
    // );
};

export default Home;
